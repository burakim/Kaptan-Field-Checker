apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'me.yesilyurt.burak'
artifacts {'kaptan-field-checker'}
version '1.0.1'



sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

plugins {
    id 'net.saliman.cobertura' version '2.3.1'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

repositories {
    mavenCentral()
}



sourceSets {
    main {
        java {
            srcDir 'src/main/java'

        }
    }
    test {
        java {
            srcDir  'src/test/java'
        }
    }
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}



test {
    useJUnitPlatform()
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    if (project.hasProperty('releaseToMavenCentral')) {
        sign configurations.archives
    }
}

publishing {
    if (project.hasProperty('releaseToMavenCentral')) {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'me.yesilyurt.burak'
            artifactId 'kaptan-field-checker'
            version '1.0.1'

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }

    repositories {

        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}
}

def customizePom(pom) {
    if (project.hasProperty('releaseToMavenCentral')) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST
            description 'It checks class fields in terms of input validation and verification.'
            name 'Kaptan Field Checker'
            url 'https://github.com/burakim/Kaptan-Field-Checker'
            organization {
                name 'me.yesilyurt.burak'
                url 'https://burak.yesilyurt.me'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/burakim/Kaptan-Field-Checker/issues'
            }
            licenses {
                license {
                    name 'MIT License'
                    url 'https://github.com/burakim/Kaptan-Field-Checker/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/burakim/Kaptan-Field-Checker'
                connection 'scm:git:git://github.com/burakim/Kaptan-Field-Checker.git'
                developerConnection 'scm:git:ssh://git@github.com:burakim/Kaptan-Field-Checker.git'
            }
            developers {
                developer {
                    name 'Halim Burak Yesilyurt'
                }
            }
        }
    }
}
}
if (project.hasProperty('releaseToMavenCentral')) {
    model {

        tasks.generatePomFileForMavenJavaPublication {
            destination = file("$buildDir/generated-pom.xml")
        }
        tasks.publishMavenJavaPublicationToMavenLocal {
            dependsOn project.tasks.signArchives
        }
        tasks.publishMavenJavaPublicationToMavenRepository {
            dependsOn project.tasks.signArchives
        }

    }
}
